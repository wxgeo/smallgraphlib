\documentclass[a4paper,twoside,10pt]{article}
\PassOptionsToPackage{utf8}{inputenc}
\PassOptionsToPackage{document}{ragged2e}
\PassOptionsToPackage{left=1.5cm,
right=1.5cm,
top=2.5cm,bottom=2cm}{geometry}
\parindent=0cm

\usepackage{amssymb}
\usepackage{amsmath}
\usepackage[table]{xcolor}
\usepackage{inputenc}
\usepackage{geometry}
\usepackage{pifont}
\usepackage{textcomp}
\usepackage{nopageno}
\usepackage{tikz}
\usetikzlibrary{calc}
\usetikzlibrary{math}
\usetikzlibrary{arrows.meta}

\usepackage[outline]{contour}
\contourlength{0.5pt}
\begin{document}



#PYTHON
from smallgraphlib import *

graph_list = [
	Graph.from_matrix([[6,3,3,3],[3,6,3,3],[3,3,6,3],[3,3,3,6]]),
	DirectedGraph.from_matrix([[6,1,2,1],[1,6,1,1],[1,1,6,1],[1,1,1,6]]),
	Acceptor.from_string(">I:0|1;0--1 / (1):0;1--I"),
	Acceptor.from_string(">I:a--1;b / (1):**--I", alphabet_name=r"\Sigma"),
	Transducer.from_string(">I:a--1;b / 1:b;a[#]--I"),
	Acceptor.from_string(r">I:\Sigma;0--1 / (1)", alphabet_name=r"\Sigma", alphabet="01"),
]

for graph in graph_list:
	write(graph.as_tikz() + "\n\n")

oo = float("inf")
M = [[0,16,oo,oo,3,15,10], [oo,0,1,4,oo,oo,oo], [oo,1,0,oo,oo,oo,oo], [oo,4,2,0,oo,oo,oo], [oo,13,17,7,0,oo,oo], [15,2,oo,oo,oo,0,3], [oo,oo,oo,oo,oo,3,0]]
write(WeightedDirectedGraph.from_matrix(M).as_tikz(options="scale=2"))
#END_PYTHON

\end{document}
